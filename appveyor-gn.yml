version: 1.0.{build}
branches:
  except:
  - /^release$|^release-\d-\d-x$/
build_cloud: libcc-20
image: libcc-20-vs2017-15.4.5
environment:
  GIT_CACHE_PATH: C:\Users\electron\libcc_cache
  DISABLE_CRASH_REPORTER_TESTS: true
  ELECTRON_ENABLE_LOGGING: true
  matrix:
    - gn_args: debug
      ELECTRON_SKIP_NATIVE_MODULE_TESTS: 1
    - gn_args: testing
platform:
  - x86
  - x64
build_script:
  - git config --global core.longpaths true
  - cd ..
  - md src
  - ps: Move-Item $env:APPVEYOR_BUILD_FOLDER -Destination src\electron
  - ps: $env:CHROMIUM_BUILDTOOLS_PATH="$pwd\src\buildtools"
  - ps: $env:SCCACHE_PATH="$pwd\src\electron\external_binaries\sccache.exe"
  - >-
      gclient config
      --name "src\electron"
      --unmanaged
      "https://github.com/electron/electron"
  - gclient sync --with_branch_heads --with_tags
  - cd src
  - gn gen out/Default "--args=import(\"//electron/build/args/%gn_args%.gn\")"
  - ninja -C out/Default electron:electron_app
  - gn gen out/ffmpeg "--args=import(\"//electron/build/args/ffmpeg.gn\")"
  - ninja -C out/ffmpeg third_party/ffmpeg
  - ninja -C out/Default electron:electron_dist_zip
test_script:
  - ninja -C out/Default third_party/electron_node:headers
  - ps: $env:npm_config_nodedir="$pwd/out/Default/gen/node_headers"
  - ps: $env:npm_config_msvs_version="2017"
  - ps: >-
      if ($env:gn_args -eq 'testing') {
        New-Item .\out\Default\gen\node_headers\Release -Type directory
        Copy-Item -path .\out\Default\electron.lib -destination .\out\Default\gen\node_headers\Release\node.lib
      }
  - ps: Push-Location; cd electron/spec
  - npm install
  - ps: Pop-Location
  - .\out\Default\electron.exe electron\spec --ci
  - python electron\verify-ffmpeg.py -c Default --source-root "%pwd%" --ffmpeg-path "%pwd%\out\ffmpeg"
artifacts:
- path: test-results.xml
  name: test-results.xml
- path: src/out/Default/dist.zip
  name: dist.zip
